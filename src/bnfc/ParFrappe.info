-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.11 from ParFrappe.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListStmt                                (4)
	Stmt -> 'func' Ident ':' '(' ListArg ')' '->' Type Block   (5)
	Stmt -> ';'                                        (6)
	Stmt -> Block                                      (7)
	Stmt -> ListItem ':' Type ';'                      (8)
	Stmt -> Stmt1                                      (9)
	Stmt -> Expr ';'                                   (10)
	Stmt -> Ident '++' ';'                             (11)
	Stmt -> Ident '--' ';'                             (12)
	Stmt -> 'return' Expr ';'                          (13)
	Stmt -> 'return' ';'                               (14)
	Stmt -> 'if' '(' Expr ')' Block                    (15)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (16)
	Stmt -> 'while' '(' Expr ')' Block                 (17)
	Stmt -> 'print' '(' ListExpr ')' ';'               (18)
	Arg -> Ident ':' Type                              (19)
	Arg -> Ident ':' '@' Type                          (20)
	ListArg ->                                         (21)
	ListArg -> Arg                                     (22)
	ListArg -> Arg ',' ListArg                         (23)
	Index -> Expr                                      (24)
	ListIndex ->                                       (25)
	ListIndex -> Index                                 (26)
	ListIndex -> Index ',' ListIndex                   (27)
	Block -> '{' ListStmt '}'                          (28)
	ListStmt ->                                        (29)
	ListStmt -> Stmt ListStmt                          (30)
	Item -> Ident                                      (31)
	Item -> Ident '[' ListIndex ']'                    (32)
	ListItem -> Item                                   (33)
	ListItem -> Item ',' ListItem                      (34)
	Stmt1 -> LeftSideAss '=' Expr ';'                  (35)
	LeftSideAss -> Ident                               (36)
	LeftSideAss -> Ident '[' ListIndex ']'             (37)
	Type -> 'int'                                      (38)
	Type -> 'string'                                   (39)
	Type -> 'bool'                                     (40)
	Type -> 'void'                                     (41)
	Type -> '(' ListType ')' '->' Type                 (42)
	Type -> 'array' '[' ListIndex ']' Type             (43)
	ListType ->                                        (44)
	ListType -> Type                                   (45)
	ListType -> Type ',' ListType                      (46)
	Expr6 -> Ident                                     (47)
	Expr6 -> Ident '[' ListIndex ']'                   (48)
	Expr6 -> Integer                                   (49)
	Expr6 -> 'true'                                    (50)
	Expr6 -> 'false'                                   (51)
	Expr6 -> Ident '(' ListExpr ')'                    (52)
	Expr6 -> String                                    (53)
	Expr6 -> '(' Expr ')'                              (54)
	Expr5 -> '-' Expr6                                 (55)
	Expr5 -> '!' Expr6                                 (56)
	Expr5 -> Expr6                                     (57)
	Expr4 -> Expr4 MulOp Expr5                         (58)
	Expr4 -> Expr5                                     (59)
	Expr3 -> Expr3 AddOp Expr4                         (60)
	Expr3 -> Expr4                                     (61)
	Expr2 -> Expr2 RelOp Expr3                         (62)
	Expr2 -> Expr3                                     (63)
	Expr1 -> Expr2 '&&' Expr1                          (64)
	Expr1 -> Expr2                                     (65)
	Expr -> Expr1 '||' Expr                            (66)
	Expr -> 'lambda:' '(' ListArg ')' '->' Type Block   (67)
	Expr -> Expr1                                      (68)
	ListExpr ->                                        (69)
	ListExpr -> Expr                                   (70)
	ListExpr -> Expr ',' ListExpr                      (71)
	AddOp -> '+'                                       (72)
	AddOp -> '-'                                       (73)
	MulOp -> '*'                                       (74)
	MulOp -> '/'                                       (75)
	MulOp -> '%'                                       (76)
	RelOp -> '<'                                       (77)
	RelOp -> '<='                                      (78)
	RelOp -> '>'                                       (79)
	RelOp -> '>='                                      (80)
	RelOp -> '=='                                      (81)
	RelOp -> '!='                                      (82)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'->'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'@'            { PT _ (TS _ 23) }
	'['            { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'array'        { PT _ (TS _ 26) }
	'bool'         { PT _ (TS _ 27) }
	'else'         { PT _ (TS _ 28) }
	'false'        { PT _ (TS _ 29) }
	'func'         { PT _ (TS _ 30) }
	'if'           { PT _ (TS _ 31) }
	'int'          { PT _ (TS _ 32) }
	'lambda:'      { PT _ (TS _ 33) }
	'print'        { PT _ (TS _ 34) }
	'return'       { PT _ (TS _ 35) }
	'string'       { PT _ (TS _ 36) }
	'true'         { PT _ (TS _ 37) }
	'void'         { PT _ (TS _ 38) }
	'while'        { PT _ (TS _ 39) }
	'{'            { PT _ (TS _ 40) }
	'||'           { PT _ (TS _ 41) }
	'}'            { PT _ (TS _ 42) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Stmt            rules 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
	Arg             rules 19, 20
	ListArg         rules 21, 22, 23
	Index           rule  24
	ListIndex       rules 25, 26, 27
	Block           rule  28
	ListStmt        rules 29, 30
	Item            rules 31, 32
	ListItem        rules 33, 34
	Stmt1           rule  35
	LeftSideAss     rules 36, 37
	Type            rules 38, 39, 40, 41, 42, 43
	ListType        rules 44, 45, 46
	Expr6           rules 47, 48, 49, 50, 51, 52, 53, 54
	Expr5           rules 55, 56, 57
	Expr4           rules 58, 59
	Expr3           rules 60, 61
	Expr2           rules 62, 63
	Expr1           rules 64, 65
	Expr            rules 66, 67, 68
	ListExpr        rules 69, 70, 71
	AddOp           rules 72, 73
	MulOp           rules 74, 75, 76
	RelOp           rules 77, 78, 79, 80, 81, 82

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	';'            shift, and enter state 24
	'false'        shift, and enter state 25
	'func'         shift, and enter state 26
	'if'           shift, and enter state 27
	'lambda:'      shift, and enter state 28
	'print'        shift, and enter state 29
	'return'       shift, and enter state 30
	'true'         shift, and enter state 31
	'while'        shift, and enter state 32
	'{'            shift, and enter state 33
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35
	%eof           reduce using rule 29

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Program        goto state 6
	Stmt           goto state 7
	Block          goto state 8
	ListStmt       goto state 9
	Item           goto state 10
	ListItem       goto state 11
	Stmt1          goto state 12
	LeftSideAss    goto state 13
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 20

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	Stmt -> Ident . '++' ';'                            (rule 11)
	Stmt -> Ident . '--' ';'                            (rule 12)
	Item -> Ident .                                     (rule 31)
	Item -> Ident . '[' ListIndex ']'                   (rule 32)
	LeftSideAss -> Ident .                              (rule 36)
	LeftSideAss -> Ident . '[' ListIndex ']'            (rule 37)
	Expr6 -> Ident .                                    (rule 47)
	Expr6 -> Ident . '[' ListIndex ']'                  (rule 48)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 52)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 69
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	'++'           shift, and enter state 70
	','            reduce using rule 31
	'-'            reduce using rule 47
	'--'           shift, and enter state 71
	'/'            reduce using rule 47
	':'            reduce using rule 31
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 36
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'['            shift, and enter state 72
	'||'           reduce using rule 47


State 4

	Expr6 -> Integer .                                  (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 5

	Expr6 -> String .                                   (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 6

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 7

	ListStmt -> Stmt . ListStmt                         (rule 30)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	';'            shift, and enter state 24
	'false'        shift, and enter state 25
	'func'         shift, and enter state 26
	'if'           shift, and enter state 27
	'lambda:'      shift, and enter state 28
	'print'        shift, and enter state 29
	'return'       shift, and enter state 30
	'true'         shift, and enter state 31
	'while'        shift, and enter state 32
	'{'            shift, and enter state 33
	'}'            reduce using rule 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35
	%eof           reduce using rule 29

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Stmt           goto state 7
	Block          goto state 8
	ListStmt       goto state 68
	Item           goto state 10
	ListItem       goto state 11
	Stmt1          goto state 12
	LeftSideAss    goto state 13
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 20

State 8

	Stmt -> Block .                                     (rule 7)

	'!'            reduce using rule 7
	'('            reduce using rule 7
	'-'            reduce using rule 7
	';'            reduce using rule 7
	'false'        reduce using rule 7
	'func'         reduce using rule 7
	'if'           reduce using rule 7
	'lambda:'      reduce using rule 7
	'print'        reduce using rule 7
	'return'       reduce using rule 7
	'true'         reduce using rule 7
	'while'        reduce using rule 7
	'{'            reduce using rule 7
	'}'            reduce using rule 7
	L_Ident        reduce using rule 7
	L_integ        reduce using rule 7
	L_quoted       reduce using rule 7
	%eof           reduce using rule 7


State 9

	Program -> ListStmt .                               (rule 4)

	%eof           reduce using rule 4


State 10

	ListItem -> Item .                                  (rule 33)
	ListItem -> Item . ',' ListItem                     (rule 34)

	','            shift, and enter state 67
	':'            reduce using rule 33


State 11

	Stmt -> ListItem . ':' Type ';'                     (rule 8)

	':'            shift, and enter state 66


State 12

	Stmt -> Stmt1 .                                     (rule 9)

	'!'            reduce using rule 9
	'('            reduce using rule 9
	'-'            reduce using rule 9
	';'            reduce using rule 9
	'false'        reduce using rule 9
	'func'         reduce using rule 9
	'if'           reduce using rule 9
	'lambda:'      reduce using rule 9
	'print'        reduce using rule 9
	'return'       reduce using rule 9
	'true'         reduce using rule 9
	'while'        reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	L_Ident        reduce using rule 9
	L_integ        reduce using rule 9
	L_quoted       reduce using rule 9
	%eof           reduce using rule 9


State 13

	Stmt1 -> LeftSideAss . '=' Expr ';'                 (rule 35)

	'='            shift, and enter state 65


State 14

	Expr5 -> Expr6 .                                    (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 15

	Expr4 -> Expr5 .                                    (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 16

	Expr4 -> Expr4 . MulOp Expr5                        (rule 58)
	Expr3 -> Expr4 .                                    (rule 61)

	'!='           reduce using rule 61
	'%'            shift, and enter state 62
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            shift, and enter state 63
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            shift, and enter state 64
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'||'           reduce using rule 61

	MulOp          goto state 61

State 17

	Expr3 -> Expr3 . AddOp Expr4                        (rule 60)
	Expr2 -> Expr3 .                                    (rule 63)

	'!='           reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'+'            shift, and enter state 59
	','            reduce using rule 63
	'-'            shift, and enter state 60
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'||'           reduce using rule 63

	AddOp          goto state 58

State 18

	Expr2 -> Expr2 . RelOp Expr3                        (rule 62)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 64)
	Expr1 -> Expr2 .                                    (rule 65)

	'!='           shift, and enter state 51
	'&&'           shift, and enter state 52
	')'            reduce using rule 65
	','            reduce using rule 65
	';'            reduce using rule 65
	'<'            shift, and enter state 53
	'<='           shift, and enter state 54
	'=='           shift, and enter state 55
	'>'            shift, and enter state 56
	'>='           shift, and enter state 57
	']'            reduce using rule 65
	'||'           reduce using rule 65

	RelOp          goto state 50

State 19

	Expr -> Expr1 . '||' Expr                           (rule 66)
	Expr -> Expr1 .                                     (rule 68)

	')'            reduce using rule 68
	','            reduce using rule 68
	';'            reduce using rule 68
	']'            reduce using rule 68
	'||'           shift, and enter state 49


State 20

	Stmt -> Expr . ';'                                  (rule 10)

	';'            shift, and enter state 48


State 21

	Expr5 -> '!' . Expr6                                (rule 56)

	'('            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 47

State 22

	Expr6 -> '(' . Expr ')'                             (rule 54)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 46

State 23

	Expr5 -> '-' . Expr6                                (rule 55)

	'('            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 45

State 24

	Stmt -> ';' .                                       (rule 6)

	'!'            reduce using rule 6
	'('            reduce using rule 6
	'-'            reduce using rule 6
	';'            reduce using rule 6
	'false'        reduce using rule 6
	'func'         reduce using rule 6
	'if'           reduce using rule 6
	'lambda:'      reduce using rule 6
	'print'        reduce using rule 6
	'return'       reduce using rule 6
	'true'         reduce using rule 6
	'while'        reduce using rule 6
	'{'            reduce using rule 6
	'}'            reduce using rule 6
	L_Ident        reduce using rule 6
	L_integ        reduce using rule 6
	L_quoted       reduce using rule 6
	%eof           reduce using rule 6


State 25

	Expr6 -> 'false' .                                  (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 26

	Stmt -> 'func' . Ident ':' '(' ListArg ')' '->' Type Block    (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 44

State 27

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 15)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 16)

	'('            shift, and enter state 43


State 28

	Expr -> 'lambda:' . '(' ListArg ')' '->' Type Block    (rule 67)

	'('            shift, and enter state 42


State 29

	Stmt -> 'print' . '(' ListExpr ')' ';'              (rule 18)

	'('            shift, and enter state 41


State 30

	Stmt -> 'return' . Expr ';'                         (rule 13)
	Stmt -> 'return' . ';'                              (rule 14)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	';'            shift, and enter state 40
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 39

State 31

	Expr6 -> 'true' .                                   (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 32

	Stmt -> 'while' . '(' Expr ')' Block                (rule 17)

	'('            shift, and enter state 37


State 33

	Block -> '{' . ListStmt '}'                         (rule 28)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	';'            shift, and enter state 24
	'false'        shift, and enter state 25
	'func'         shift, and enter state 26
	'if'           shift, and enter state 27
	'lambda:'      shift, and enter state 28
	'print'        shift, and enter state 29
	'return'       shift, and enter state 30
	'true'         shift, and enter state 31
	'while'        shift, and enter state 32
	'{'            shift, and enter state 33
	'}'            reduce using rule 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Stmt           goto state 7
	Block          goto state 8
	ListStmt       goto state 36
	Item           goto state 10
	ListItem       goto state 11
	Stmt1          goto state 12
	LeftSideAss    goto state 13
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 20

State 34

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 35

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 36

	Block -> '{' ListStmt . '}'                         (rule 28)

	'}'            shift, and enter state 105


State 37

	Stmt -> 'while' '(' . Expr ')' Block                (rule 17)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 104

State 38

	Expr6 -> Ident .                                    (rule 47)
	Expr6 -> Ident . '[' ListIndex ']'                  (rule 48)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 52)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 69
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'['            shift, and enter state 103
	']'            reduce using rule 47
	'||'           reduce using rule 47


State 39

	Stmt -> 'return' Expr . ';'                         (rule 13)

	';'            shift, and enter state 102


State 40

	Stmt -> 'return' ';' .                              (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'false'        reduce using rule 14
	'func'         reduce using rule 14
	'if'           reduce using rule 14
	'lambda:'      reduce using rule 14
	'print'        reduce using rule 14
	'return'       reduce using rule 14
	'true'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 41

	Stmt -> 'print' '(' . ListExpr ')' ';'              (rule 18)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	')'            reduce using rule 69
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 78
	ListExpr       goto state 101

State 42

	Expr -> 'lambda:' '(' . ListArg ')' '->' Type Block    (rule 67)

	')'            reduce using rule 21
	L_Ident        shift, and enter state 2

	Ident          goto state 98
	Arg            goto state 99
	ListArg        goto state 100

State 43

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 15)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 16)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 97

State 44

	Stmt -> 'func' Ident . ':' '(' ListArg ')' '->' Type Block    (rule 5)

	':'            shift, and enter state 96


State 45

	Expr5 -> '-' Expr6 .                                (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 46

	Expr6 -> '(' Expr . ')'                             (rule 54)

	')'            shift, and enter state 95


State 47

	Expr5 -> '!' Expr6 .                                (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 48

	Stmt -> Expr ';' .                                  (rule 10)

	'!'            reduce using rule 10
	'('            reduce using rule 10
	'-'            reduce using rule 10
	';'            reduce using rule 10
	'false'        reduce using rule 10
	'func'         reduce using rule 10
	'if'           reduce using rule 10
	'lambda:'      reduce using rule 10
	'print'        reduce using rule 10
	'return'       reduce using rule 10
	'true'         reduce using rule 10
	'while'        reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	L_Ident        reduce using rule 10
	L_integ        reduce using rule 10
	L_quoted       reduce using rule 10
	%eof           reduce using rule 10


State 49

	Expr -> Expr1 '||' . Expr                           (rule 66)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 94

State 50

	Expr2 -> Expr2 RelOp . Expr3                        (rule 62)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 93

State 51

	RelOp -> '!=' .                                     (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'true'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 52

	Expr1 -> Expr2 '&&' . Expr1                         (rule 64)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 92

State 53

	RelOp -> '<' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 54

	RelOp -> '<=' .                                     (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 55

	RelOp -> '==' .                                     (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 56

	RelOp -> '>' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'true'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 57

	RelOp -> '>=' .                                     (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 58

	Expr3 -> Expr3 AddOp . Expr4                        (rule 60)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 91

State 59

	AddOp -> '+' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 60

	AddOp -> '-' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 61

	Expr4 -> Expr4 MulOp . Expr5                        (rule 58)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 90

State 62

	MulOp -> '%' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 63

	MulOp -> '*' .                                      (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 64

	MulOp -> '/' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 65

	Stmt1 -> LeftSideAss '=' . Expr ';'                 (rule 35)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 89

State 66

	Stmt -> ListItem ':' . Type ';'                     (rule 8)

	'('            shift, and enter state 83
	'array'        shift, and enter state 84
	'bool'         shift, and enter state 85
	'int'          shift, and enter state 86
	'string'       shift, and enter state 87
	'void'         shift, and enter state 88

	Type           goto state 82

State 67

	ListItem -> Item ',' . ListItem                     (rule 34)

	L_Ident        shift, and enter state 2

	Ident          goto state 80
	Item           goto state 10
	ListItem       goto state 81

State 68

	ListStmt -> Stmt ListStmt .                         (rule 30)

	'}'            reduce using rule 30
	%eof           reduce using rule 30


State 69

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 52)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	')'            reduce using rule 69
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 78
	ListExpr       goto state 79

State 70

	Stmt -> Ident '++' . ';'                            (rule 11)

	';'            shift, and enter state 77


State 71

	Stmt -> Ident '--' . ';'                            (rule 12)

	';'            shift, and enter state 76


State 72

	Item -> Ident '[' . ListIndex ']'                   (rule 32)
	LeftSideAss -> Ident '[' . ListIndex ']'            (rule 37)
	Expr6 -> Ident '[' . ListIndex ']'                  (rule 48)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	']'            reduce using rule 25
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Index          goto state 73
	ListIndex      goto state 74
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 75

State 73

	ListIndex -> Index .                                (rule 26)
	ListIndex -> Index . ',' ListIndex                  (rule 27)

	','            shift, and enter state 123
	']'            reduce using rule 26


State 74

	Item -> Ident '[' ListIndex . ']'                   (rule 32)
	LeftSideAss -> Ident '[' ListIndex . ']'            (rule 37)
	Expr6 -> Ident '[' ListIndex . ']'                  (rule 48)

	']'            shift, and enter state 122


State 75

	Index -> Expr .                                     (rule 24)

	','            reduce using rule 24
	']'            reduce using rule 24


State 76

	Stmt -> Ident '--' ';' .                            (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'false'        reduce using rule 12
	'func'         reduce using rule 12
	'if'           reduce using rule 12
	'lambda:'      reduce using rule 12
	'print'        reduce using rule 12
	'return'       reduce using rule 12
	'true'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 77

	Stmt -> Ident '++' ';' .                            (rule 11)

	'!'            reduce using rule 11
	'('            reduce using rule 11
	'-'            reduce using rule 11
	';'            reduce using rule 11
	'false'        reduce using rule 11
	'func'         reduce using rule 11
	'if'           reduce using rule 11
	'lambda:'      reduce using rule 11
	'print'        reduce using rule 11
	'return'       reduce using rule 11
	'true'         reduce using rule 11
	'while'        reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	L_Ident        reduce using rule 11
	L_integ        reduce using rule 11
	L_quoted       reduce using rule 11
	%eof           reduce using rule 11


State 78

	ListExpr -> Expr .                                  (rule 70)
	ListExpr -> Expr . ',' ListExpr                     (rule 71)

	')'            reduce using rule 70
	','            shift, and enter state 121


State 79

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 52)

	')'            shift, and enter state 120


State 80

	Item -> Ident .                                     (rule 31)
	Item -> Ident . '[' ListIndex ']'                   (rule 32)

	','            reduce using rule 31
	':'            reduce using rule 31
	'['            shift, and enter state 119


State 81

	ListItem -> Item ',' ListItem .                     (rule 34)

	':'            reduce using rule 34


State 82

	Stmt -> ListItem ':' Type . ';'                     (rule 8)

	';'            shift, and enter state 118


State 83

	Type -> '(' . ListType ')' '->' Type                (rule 42)

	'('            shift, and enter state 83
	')'            reduce using rule 44
	'array'        shift, and enter state 84
	'bool'         shift, and enter state 85
	'int'          shift, and enter state 86
	'string'       shift, and enter state 87
	'void'         shift, and enter state 88

	Type           goto state 116
	ListType       goto state 117

State 84

	Type -> 'array' . '[' ListIndex ']' Type            (rule 43)

	'['            shift, and enter state 115


State 85

	Type -> 'bool' .                                    (rule 40)

	')'            reduce using rule 40
	','            reduce using rule 40
	';'            reduce using rule 40
	'{'            reduce using rule 40


State 86

	Type -> 'int' .                                     (rule 38)

	')'            reduce using rule 38
	','            reduce using rule 38
	';'            reduce using rule 38
	'{'            reduce using rule 38


State 87

	Type -> 'string' .                                  (rule 39)

	')'            reduce using rule 39
	','            reduce using rule 39
	';'            reduce using rule 39
	'{'            reduce using rule 39


State 88

	Type -> 'void' .                                    (rule 41)

	')'            reduce using rule 41
	','            reduce using rule 41
	';'            reduce using rule 41
	'{'            reduce using rule 41


State 89

	Stmt1 -> LeftSideAss '=' Expr . ';'                 (rule 35)

	';'            shift, and enter state 114


State 90

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 91

	Expr4 -> Expr4 . MulOp Expr5                        (rule 58)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 60)

	'!='           reduce using rule 60
	'%'            shift, and enter state 62
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            shift, and enter state 63
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            shift, and enter state 64
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60

	MulOp          goto state 61

State 92

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 64)

	')'            reduce using rule 64
	','            reduce using rule 64
	';'            reduce using rule 64
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 93

	Expr3 -> Expr3 . AddOp Expr4                        (rule 60)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 62)

	'!='           reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'+'            shift, and enter state 59
	','            reduce using rule 62
	'-'            shift, and enter state 60
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'||'           reduce using rule 62

	AddOp          goto state 58

State 94

	Expr -> Expr1 '||' Expr .                           (rule 66)

	')'            reduce using rule 66
	','            reduce using rule 66
	';'            reduce using rule 66
	']'            reduce using rule 66


State 95

	Expr6 -> '(' Expr ')' .                             (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 96

	Stmt -> 'func' Ident ':' . '(' ListArg ')' '->' Type Block    (rule 5)

	'('            shift, and enter state 113


State 97

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 15)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 16)

	')'            shift, and enter state 112


State 98

	Arg -> Ident . ':' Type                             (rule 19)
	Arg -> Ident . ':' '@' Type                         (rule 20)

	':'            shift, and enter state 111


State 99

	ListArg -> Arg .                                    (rule 22)
	ListArg -> Arg . ',' ListArg                        (rule 23)

	')'            reduce using rule 22
	','            shift, and enter state 110


State 100

	Expr -> 'lambda:' '(' ListArg . ')' '->' Type Block    (rule 67)

	')'            shift, and enter state 109


State 101

	Stmt -> 'print' '(' ListExpr . ')' ';'              (rule 18)

	')'            shift, and enter state 108


State 102

	Stmt -> 'return' Expr ';' .                         (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'false'        reduce using rule 13
	'func'         reduce using rule 13
	'if'           reduce using rule 13
	'lambda:'      reduce using rule 13
	'print'        reduce using rule 13
	'return'       reduce using rule 13
	'true'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 103

	Expr6 -> Ident '[' . ListIndex ']'                  (rule 48)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	']'            reduce using rule 25
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Index          goto state 73
	ListIndex      goto state 107
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 75

State 104

	Stmt -> 'while' '(' Expr . ')' Block                (rule 17)

	')'            shift, and enter state 106


State 105

	Block -> '{' ListStmt '}' .                         (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	']'            reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'func'         reduce using rule 28
	'if'           reduce using rule 28
	'lambda:'      reduce using rule 28
	'print'        reduce using rule 28
	'return'       reduce using rule 28
	'true'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28
	%eof           reduce using rule 28


State 106

	Stmt -> 'while' '(' Expr ')' . Block                (rule 17)

	'{'            shift, and enter state 33

	Block          goto state 138

State 107

	Expr6 -> Ident '[' ListIndex . ']'                  (rule 48)

	']'            shift, and enter state 137


State 108

	Stmt -> 'print' '(' ListExpr ')' . ';'              (rule 18)

	';'            shift, and enter state 136


State 109

	Expr -> 'lambda:' '(' ListArg ')' . '->' Type Block    (rule 67)

	'->'           shift, and enter state 135


State 110

	ListArg -> Arg ',' . ListArg                        (rule 23)

	')'            reduce using rule 21
	L_Ident        shift, and enter state 2

	Ident          goto state 98
	Arg            goto state 99
	ListArg        goto state 134

State 111

	Arg -> Ident ':' . Type                             (rule 19)
	Arg -> Ident ':' . '@' Type                         (rule 20)

	'('            shift, and enter state 83
	'@'            shift, and enter state 133
	'array'        shift, and enter state 84
	'bool'         shift, and enter state 85
	'int'          shift, and enter state 86
	'string'       shift, and enter state 87
	'void'         shift, and enter state 88

	Type           goto state 132

State 112

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 15)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 16)

	'{'            shift, and enter state 33

	Block          goto state 131

State 113

	Stmt -> 'func' Ident ':' '(' . ListArg ')' '->' Type Block    (rule 5)

	')'            reduce using rule 21
	L_Ident        shift, and enter state 2

	Ident          goto state 98
	Arg            goto state 99
	ListArg        goto state 130

State 114

	Stmt1 -> LeftSideAss '=' Expr ';' .                 (rule 35)

	'!'            reduce using rule 35
	'('            reduce using rule 35
	'-'            reduce using rule 35
	';'            reduce using rule 35
	'false'        reduce using rule 35
	'func'         reduce using rule 35
	'if'           reduce using rule 35
	'lambda:'      reduce using rule 35
	'print'        reduce using rule 35
	'return'       reduce using rule 35
	'true'         reduce using rule 35
	'while'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_Ident        reduce using rule 35
	L_integ        reduce using rule 35
	L_quoted       reduce using rule 35
	%eof           reduce using rule 35


State 115

	Type -> 'array' '[' . ListIndex ']' Type            (rule 43)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	']'            reduce using rule 25
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Index          goto state 73
	ListIndex      goto state 129
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 75

State 116

	ListType -> Type .                                  (rule 45)
	ListType -> Type . ',' ListType                     (rule 46)

	')'            reduce using rule 45
	','            shift, and enter state 128


State 117

	Type -> '(' ListType . ')' '->' Type                (rule 42)

	')'            shift, and enter state 127


State 118

	Stmt -> ListItem ':' Type ';' .                     (rule 8)

	'!'            reduce using rule 8
	'('            reduce using rule 8
	'-'            reduce using rule 8
	';'            reduce using rule 8
	'false'        reduce using rule 8
	'func'         reduce using rule 8
	'if'           reduce using rule 8
	'lambda:'      reduce using rule 8
	'print'        reduce using rule 8
	'return'       reduce using rule 8
	'true'         reduce using rule 8
	'while'        reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8
	L_integ        reduce using rule 8
	L_quoted       reduce using rule 8
	%eof           reduce using rule 8


State 119

	Item -> Ident '[' . ListIndex ']'                   (rule 32)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	']'            reduce using rule 25
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Index          goto state 73
	ListIndex      goto state 126
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 75

State 120

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 121

	ListExpr -> Expr ',' . ListExpr                     (rule 71)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	')'            reduce using rule 69
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 78
	ListExpr       goto state 125

State 122

	Item -> Ident '[' ListIndex ']' .                   (rule 32)
	LeftSideAss -> Ident '[' ListIndex ']' .            (rule 37)
	Expr6 -> Ident '[' ListIndex ']' .                  (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 32
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	':'            reduce using rule 32
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 37
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 123

	ListIndex -> Index ',' . ListIndex                  (rule 27)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	']'            reduce using rule 25
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Index          goto state 73
	ListIndex      goto state 124
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 75

State 124

	ListIndex -> Index ',' ListIndex .                  (rule 27)

	']'            reduce using rule 27


State 125

	ListExpr -> Expr ',' ListExpr .                     (rule 71)

	')'            reduce using rule 71


State 126

	Item -> Ident '[' ListIndex . ']'                   (rule 32)

	']'            shift, and enter state 146


State 127

	Type -> '(' ListType ')' . '->' Type                (rule 42)

	'->'           shift, and enter state 145


State 128

	ListType -> Type ',' . ListType                     (rule 46)

	'('            shift, and enter state 83
	')'            reduce using rule 44
	'array'        shift, and enter state 84
	'bool'         shift, and enter state 85
	'int'          shift, and enter state 86
	'string'       shift, and enter state 87
	'void'         shift, and enter state 88

	Type           goto state 116
	ListType       goto state 144

State 129

	Type -> 'array' '[' ListIndex . ']' Type            (rule 43)

	']'            shift, and enter state 143


State 130

	Stmt -> 'func' Ident ':' '(' ListArg . ')' '->' Type Block    (rule 5)

	')'            shift, and enter state 142


State 131

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 15)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 16)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'else'         shift, and enter state 141
	'false'        reduce using rule 15
	'func'         reduce using rule 15
	'if'           reduce using rule 15
	'lambda:'      reduce using rule 15
	'print'        reduce using rule 15
	'return'       reduce using rule 15
	'true'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	%eof           reduce using rule 15


State 132

	Arg -> Ident ':' Type .                             (rule 19)

	')'            reduce using rule 19
	','            reduce using rule 19


State 133

	Arg -> Ident ':' '@' . Type                         (rule 20)

	'('            shift, and enter state 83
	'array'        shift, and enter state 84
	'bool'         shift, and enter state 85
	'int'          shift, and enter state 86
	'string'       shift, and enter state 87
	'void'         shift, and enter state 88

	Type           goto state 140

State 134

	ListArg -> Arg ',' ListArg .                        (rule 23)

	')'            reduce using rule 23


State 135

	Expr -> 'lambda:' '(' ListArg ')' '->' . Type Block    (rule 67)

	'('            shift, and enter state 83
	'array'        shift, and enter state 84
	'bool'         shift, and enter state 85
	'int'          shift, and enter state 86
	'string'       shift, and enter state 87
	'void'         shift, and enter state 88

	Type           goto state 139

State 136

	Stmt -> 'print' '(' ListExpr ')' ';' .              (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'false'        reduce using rule 18
	'func'         reduce using rule 18
	'if'           reduce using rule 18
	'lambda:'      reduce using rule 18
	'print'        reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


State 137

	Expr6 -> Ident '[' ListIndex ']' .                  (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	']'            reduce using rule 48
	'||'           reduce using rule 48


State 138

	Stmt -> 'while' '(' Expr ')' Block .                (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'false'        reduce using rule 17
	'func'         reduce using rule 17
	'if'           reduce using rule 17
	'lambda:'      reduce using rule 17
	'print'        reduce using rule 17
	'return'       reduce using rule 17
	'true'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17
	%eof           reduce using rule 17


State 139

	Expr -> 'lambda:' '(' ListArg ')' '->' Type . Block    (rule 67)

	'{'            shift, and enter state 33

	Block          goto state 151

State 140

	Arg -> Ident ':' '@' Type .                         (rule 20)

	')'            reduce using rule 20
	','            reduce using rule 20


State 141

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 16)

	'{'            shift, and enter state 33

	Block          goto state 150

State 142

	Stmt -> 'func' Ident ':' '(' ListArg ')' . '->' Type Block    (rule 5)

	'->'           shift, and enter state 149


State 143

	Type -> 'array' '[' ListIndex ']' . Type            (rule 43)

	'('            shift, and enter state 83
	'array'        shift, and enter state 84
	'bool'         shift, and enter state 85
	'int'          shift, and enter state 86
	'string'       shift, and enter state 87
	'void'         shift, and enter state 88

	Type           goto state 148

State 144

	ListType -> Type ',' ListType .                     (rule 46)

	')'            reduce using rule 46


State 145

	Type -> '(' ListType ')' '->' . Type                (rule 42)

	'('            shift, and enter state 83
	'array'        shift, and enter state 84
	'bool'         shift, and enter state 85
	'int'          shift, and enter state 86
	'string'       shift, and enter state 87
	'void'         shift, and enter state 88

	Type           goto state 147

State 146

	Item -> Ident '[' ListIndex ']' .                   (rule 32)

	','            reduce using rule 32
	':'            reduce using rule 32


State 147

	Type -> '(' ListType ')' '->' Type .                (rule 42)

	')'            reduce using rule 42
	','            reduce using rule 42
	';'            reduce using rule 42
	'{'            reduce using rule 42


State 148

	Type -> 'array' '[' ListIndex ']' Type .            (rule 43)

	')'            reduce using rule 43
	','            reduce using rule 43
	';'            reduce using rule 43
	'{'            reduce using rule 43


State 149

	Stmt -> 'func' Ident ':' '(' ListArg ')' '->' . Type Block    (rule 5)

	'('            shift, and enter state 83
	'array'        shift, and enter state 84
	'bool'         shift, and enter state 85
	'int'          shift, and enter state 86
	'string'       shift, and enter state 87
	'void'         shift, and enter state 88

	Type           goto state 152

State 150

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'false'        reduce using rule 16
	'func'         reduce using rule 16
	'if'           reduce using rule 16
	'lambda:'      reduce using rule 16
	'print'        reduce using rule 16
	'return'       reduce using rule 16
	'true'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	%eof           reduce using rule 16


State 151

	Expr -> 'lambda:' '(' ListArg ')' '->' Type Block .    (rule 67)

	')'            reduce using rule 67
	','            reduce using rule 67
	';'            reduce using rule 67
	']'            reduce using rule 67


State 152

	Stmt -> 'func' Ident ':' '(' ListArg ')' '->' Type . Block    (rule 5)

	'{'            shift, and enter state 33

	Block          goto state 153

State 153

	Stmt -> 'func' Ident ':' '(' ListArg ')' '->' Type Block .    (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'false'        reduce using rule 5
	'func'         reduce using rule 5
	'if'           reduce using rule 5
	'lambda:'      reduce using rule 5
	'print'        reduce using rule 5
	'return'       reduce using rule 5
	'true'         reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 83
Number of terminals: 45
Number of non-terminals: 29
Number of states: 154
