-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.11 from ParFrappe.y
-----------------------------------------------------------------------------


rule 24 is unused
rule 25 is unused
rule 26 is unused
rule 27 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListStmt                                (4)
	Stmt -> 'func' Ident ':' '(' ListArg ')' '->' Type Block   (5)
	Stmt -> ';'                                        (6)
	Stmt -> Block                                      (7)
	Stmt -> ListItem ':' Type ';'                      (8)
	Stmt -> Stmt1                                      (9)
	Stmt -> Expr ';'                                   (10)
	Stmt -> Ident '++' ';'                             (11)
	Stmt -> Ident '--' ';'                             (12)
	Stmt -> 'return' Expr ';'                          (13)
	Stmt -> 'return' ';'                               (14)
	Stmt -> 'if' '(' Expr ')' Block                    (15)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (16)
	Stmt -> 'while' '(' Expr ')' Block                 (17)
	Stmt -> 'print' '(' ListExpr ')' ';'               (18)
	Arg -> Ident ':' Type                              (19)
	Arg -> Ident ':' '@' Type                          (20)
	ListArg ->                                         (21)
	ListArg -> Arg                                     (22)
	ListArg -> Arg ',' ListArg                         (23)
	Index -> Expr                                      (24)
	ListIndex ->                                       (25)
	ListIndex -> Index                                 (26)
	ListIndex -> Index ',' ListIndex                   (27)
	Block -> '{' ListStmt '}'                          (28)
	ListStmt ->                                        (29)
	ListStmt -> Stmt ListStmt                          (30)
	Item -> Ident                                      (31)
	ListItem -> Item                                   (32)
	ListItem -> Item ',' ListItem                      (33)
	Stmt1 -> LeftSideAss '=' Expr ';'                  (34)
	LeftSideAss -> Ident                               (35)
	Type -> 'int'                                      (36)
	Type -> 'string'                                   (37)
	Type -> 'bool'                                     (38)
	Type -> 'void'                                     (39)
	Type -> '(' ListType ')' '->' Type                 (40)
	ListType ->                                        (41)
	ListType -> Type                                   (42)
	ListType -> Type ',' ListType                      (43)
	Expr6 -> Ident                                     (44)
	Expr6 -> Integer                                   (45)
	Expr6 -> 'true'                                    (46)
	Expr6 -> 'false'                                   (47)
	Expr6 -> Ident '(' ListExpr ')'                    (48)
	Expr6 -> String                                    (49)
	Expr6 -> '(' Expr ')'                              (50)
	Expr5 -> '-' Expr6                                 (51)
	Expr5 -> '!' Expr6                                 (52)
	Expr5 -> Expr6                                     (53)
	Expr4 -> Expr4 MulOp Expr5                         (54)
	Expr4 -> Expr5                                     (55)
	Expr3 -> Expr3 AddOp Expr4                         (56)
	Expr3 -> Expr4                                     (57)
	Expr2 -> Expr2 RelOp Expr3                         (58)
	Expr2 -> Expr3                                     (59)
	Expr1 -> Expr2 '&&' Expr1                          (60)
	Expr1 -> Expr2                                     (61)
	Expr -> Expr1 '||' Expr                            (62)
	Expr -> 'lambda:' '(' ListArg ')' '->' Type Block   (63)
	Expr -> Expr1                                      (64)
	ListExpr ->                                        (65)
	ListExpr -> Expr                                   (66)
	ListExpr -> Expr ',' ListExpr                      (67)
	AddOp -> '+'                                       (68)
	AddOp -> '-'                                       (69)
	MulOp -> '*'                                       (70)
	MulOp -> '/'                                       (71)
	MulOp -> '%'                                       (72)
	RelOp -> '<'                                       (73)
	RelOp -> '<='                                      (74)
	RelOp -> '>'                                       (75)
	RelOp -> '>='                                      (76)
	RelOp -> '=='                                      (77)
	RelOp -> '!='                                      (78)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'->'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'@'            { PT _ (TS _ 23) }
	'bool'         { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'false'        { PT _ (TS _ 26) }
	'func'         { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'lambda:'      { PT _ (TS _ 30) }
	'print'        { PT _ (TS _ 31) }
	'return'       { PT _ (TS _ 32) }
	'string'       { PT _ (TS _ 33) }
	'true'         { PT _ (TS _ 34) }
	'void'         { PT _ (TS _ 35) }
	'while'        { PT _ (TS _ 36) }
	'{'            { PT _ (TS _ 37) }
	'||'           { PT _ (TS _ 38) }
	'}'            { PT _ (TS _ 39) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Stmt            rules 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
	Arg             rules 19, 20
	ListArg         rules 21, 22, 23
	Index           rule  24
	ListIndex       rules 25, 26, 27
	Block           rule  28
	ListStmt        rules 29, 30
	Item            rule  31
	ListItem        rules 32, 33
	Stmt1           rule  34
	LeftSideAss     rule  35
	Type            rules 36, 37, 38, 39, 40
	ListType        rules 41, 42, 43
	Expr6           rules 44, 45, 46, 47, 48, 49, 50
	Expr5           rules 51, 52, 53
	Expr4           rules 54, 55
	Expr3           rules 56, 57
	Expr2           rules 58, 59
	Expr1           rules 60, 61
	Expr            rules 62, 63, 64
	ListExpr        rules 65, 66, 67
	AddOp           rules 68, 69
	MulOp           rules 70, 71, 72
	RelOp           rules 73, 74, 75, 76, 77, 78

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	';'            shift, and enter state 24
	'false'        shift, and enter state 25
	'func'         shift, and enter state 26
	'if'           shift, and enter state 27
	'lambda:'      shift, and enter state 28
	'print'        shift, and enter state 29
	'return'       shift, and enter state 30
	'true'         shift, and enter state 31
	'while'        shift, and enter state 32
	'{'            shift, and enter state 33
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35
	%eof           reduce using rule 29

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Program        goto state 6
	Stmt           goto state 7
	Block          goto state 8
	ListStmt       goto state 9
	Item           goto state 10
	ListItem       goto state 11
	Stmt1          goto state 12
	LeftSideAss    goto state 13
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 20

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	Stmt -> Ident . '++' ';'                            (rule 11)
	Stmt -> Ident . '--' ';'                            (rule 12)
	Item -> Ident .                                     (rule 31)
	LeftSideAss -> Ident .                              (rule 35)
	Expr6 -> Ident .                                    (rule 44)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 48)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	'('            shift, and enter state 69
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	'++'           shift, and enter state 70
	','            reduce using rule 31
	'-'            reduce using rule 44
	'--'           shift, and enter state 71
	'/'            reduce using rule 44
	':'            reduce using rule 31
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 35
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 4

	Expr6 -> Integer .                                  (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 5

	Expr6 -> String .                                   (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 6

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 7

	ListStmt -> Stmt . ListStmt                         (rule 30)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	';'            shift, and enter state 24
	'false'        shift, and enter state 25
	'func'         shift, and enter state 26
	'if'           shift, and enter state 27
	'lambda:'      shift, and enter state 28
	'print'        shift, and enter state 29
	'return'       shift, and enter state 30
	'true'         shift, and enter state 31
	'while'        shift, and enter state 32
	'{'            shift, and enter state 33
	'}'            reduce using rule 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35
	%eof           reduce using rule 29

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Stmt           goto state 7
	Block          goto state 8
	ListStmt       goto state 68
	Item           goto state 10
	ListItem       goto state 11
	Stmt1          goto state 12
	LeftSideAss    goto state 13
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 20

State 8

	Stmt -> Block .                                     (rule 7)

	'!'            reduce using rule 7
	'('            reduce using rule 7
	'-'            reduce using rule 7
	';'            reduce using rule 7
	'false'        reduce using rule 7
	'func'         reduce using rule 7
	'if'           reduce using rule 7
	'lambda:'      reduce using rule 7
	'print'        reduce using rule 7
	'return'       reduce using rule 7
	'true'         reduce using rule 7
	'while'        reduce using rule 7
	'{'            reduce using rule 7
	'}'            reduce using rule 7
	L_Ident        reduce using rule 7
	L_integ        reduce using rule 7
	L_quoted       reduce using rule 7
	%eof           reduce using rule 7


State 9

	Program -> ListStmt .                               (rule 4)

	%eof           reduce using rule 4


State 10

	ListItem -> Item .                                  (rule 32)
	ListItem -> Item . ',' ListItem                     (rule 33)

	','            shift, and enter state 67
	':'            reduce using rule 32


State 11

	Stmt -> ListItem . ':' Type ';'                     (rule 8)

	':'            shift, and enter state 66


State 12

	Stmt -> Stmt1 .                                     (rule 9)

	'!'            reduce using rule 9
	'('            reduce using rule 9
	'-'            reduce using rule 9
	';'            reduce using rule 9
	'false'        reduce using rule 9
	'func'         reduce using rule 9
	'if'           reduce using rule 9
	'lambda:'      reduce using rule 9
	'print'        reduce using rule 9
	'return'       reduce using rule 9
	'true'         reduce using rule 9
	'while'        reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	L_Ident        reduce using rule 9
	L_integ        reduce using rule 9
	L_quoted       reduce using rule 9
	%eof           reduce using rule 9


State 13

	Stmt1 -> LeftSideAss . '=' Expr ';'                 (rule 34)

	'='            shift, and enter state 65


State 14

	Expr5 -> Expr6 .                                    (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 15

	Expr4 -> Expr5 .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55


State 16

	Expr4 -> Expr4 . MulOp Expr5                        (rule 54)
	Expr3 -> Expr4 .                                    (rule 57)

	'!='           reduce using rule 57
	'%'            shift, and enter state 62
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            shift, and enter state 63
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            shift, and enter state 64
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57

	MulOp          goto state 61

State 17

	Expr3 -> Expr3 . AddOp Expr4                        (rule 56)
	Expr2 -> Expr3 .                                    (rule 59)

	'!='           reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'+'            shift, and enter state 59
	','            reduce using rule 59
	'-'            shift, and enter state 60
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59

	AddOp          goto state 58

State 18

	Expr2 -> Expr2 . RelOp Expr3                        (rule 58)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 60)
	Expr1 -> Expr2 .                                    (rule 61)

	'!='           shift, and enter state 51
	'&&'           shift, and enter state 52
	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	'<'            shift, and enter state 53
	'<='           shift, and enter state 54
	'=='           shift, and enter state 55
	'>'            shift, and enter state 56
	'>='           shift, and enter state 57
	'||'           reduce using rule 61

	RelOp          goto state 50

State 19

	Expr -> Expr1 . '||' Expr                           (rule 62)
	Expr -> Expr1 .                                     (rule 64)

	')'            reduce using rule 64
	','            reduce using rule 64
	';'            reduce using rule 64
	'||'           shift, and enter state 49


State 20

	Stmt -> Expr . ';'                                  (rule 10)

	';'            shift, and enter state 48


State 21

	Expr5 -> '!' . Expr6                                (rule 52)

	'('            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 47

State 22

	Expr6 -> '(' . Expr ')'                             (rule 50)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 46

State 23

	Expr5 -> '-' . Expr6                                (rule 51)

	'('            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 45

State 24

	Stmt -> ';' .                                       (rule 6)

	'!'            reduce using rule 6
	'('            reduce using rule 6
	'-'            reduce using rule 6
	';'            reduce using rule 6
	'false'        reduce using rule 6
	'func'         reduce using rule 6
	'if'           reduce using rule 6
	'lambda:'      reduce using rule 6
	'print'        reduce using rule 6
	'return'       reduce using rule 6
	'true'         reduce using rule 6
	'while'        reduce using rule 6
	'{'            reduce using rule 6
	'}'            reduce using rule 6
	L_Ident        reduce using rule 6
	L_integ        reduce using rule 6
	L_quoted       reduce using rule 6
	%eof           reduce using rule 6


State 25

	Expr6 -> 'false' .                                  (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 26

	Stmt -> 'func' . Ident ':' '(' ListArg ')' '->' Type Block    (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 44

State 27

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 15)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 16)

	'('            shift, and enter state 43


State 28

	Expr -> 'lambda:' . '(' ListArg ')' '->' Type Block    (rule 63)

	'('            shift, and enter state 42


State 29

	Stmt -> 'print' . '(' ListExpr ')' ';'              (rule 18)

	'('            shift, and enter state 41


State 30

	Stmt -> 'return' . Expr ';'                         (rule 13)
	Stmt -> 'return' . ';'                              (rule 14)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	';'            shift, and enter state 40
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 39

State 31

	Expr6 -> 'true' .                                   (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 32

	Stmt -> 'while' . '(' Expr ')' Block                (rule 17)

	'('            shift, and enter state 37


State 33

	Block -> '{' . ListStmt '}'                         (rule 28)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	';'            shift, and enter state 24
	'false'        shift, and enter state 25
	'func'         shift, and enter state 26
	'if'           shift, and enter state 27
	'lambda:'      shift, and enter state 28
	'print'        shift, and enter state 29
	'return'       shift, and enter state 30
	'true'         shift, and enter state 31
	'while'        shift, and enter state 32
	'{'            shift, and enter state 33
	'}'            reduce using rule 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Stmt           goto state 7
	Block          goto state 8
	ListStmt       goto state 36
	Item           goto state 10
	ListItem       goto state 11
	Stmt1          goto state 12
	LeftSideAss    goto state 13
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 20

State 34

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 35

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 36

	Block -> '{' ListStmt . '}'                         (rule 28)

	'}'            shift, and enter state 99


State 37

	Stmt -> 'while' '(' . Expr ')' Block                (rule 17)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 98

State 38

	Expr6 -> Ident .                                    (rule 44)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 48)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	'('            shift, and enter state 69
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 39

	Stmt -> 'return' Expr . ';'                         (rule 13)

	';'            shift, and enter state 97


State 40

	Stmt -> 'return' ';' .                              (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'false'        reduce using rule 14
	'func'         reduce using rule 14
	'if'           reduce using rule 14
	'lambda:'      reduce using rule 14
	'print'        reduce using rule 14
	'return'       reduce using rule 14
	'true'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 41

	Stmt -> 'print' '(' . ListExpr ')' ';'              (rule 18)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	')'            reduce using rule 65
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 74
	ListExpr       goto state 96

State 42

	Expr -> 'lambda:' '(' . ListArg ')' '->' Type Block    (rule 63)

	')'            reduce using rule 21
	L_Ident        shift, and enter state 2

	Ident          goto state 93
	Arg            goto state 94
	ListArg        goto state 95

State 43

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 15)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 16)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 92

State 44

	Stmt -> 'func' Ident . ':' '(' ListArg ')' '->' Type Block    (rule 5)

	':'            shift, and enter state 91


State 45

	Expr5 -> '-' Expr6 .                                (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 46

	Expr6 -> '(' Expr . ')'                             (rule 50)

	')'            shift, and enter state 90


State 47

	Expr5 -> '!' Expr6 .                                (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52


State 48

	Stmt -> Expr ';' .                                  (rule 10)

	'!'            reduce using rule 10
	'('            reduce using rule 10
	'-'            reduce using rule 10
	';'            reduce using rule 10
	'false'        reduce using rule 10
	'func'         reduce using rule 10
	'if'           reduce using rule 10
	'lambda:'      reduce using rule 10
	'print'        reduce using rule 10
	'return'       reduce using rule 10
	'true'         reduce using rule 10
	'while'        reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	L_Ident        reduce using rule 10
	L_integ        reduce using rule 10
	L_quoted       reduce using rule 10
	%eof           reduce using rule 10


State 49

	Expr -> Expr1 '||' . Expr                           (rule 62)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 89

State 50

	Expr2 -> Expr2 RelOp . Expr3                        (rule 58)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 88

State 51

	RelOp -> '!=' .                                     (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 52

	Expr1 -> Expr2 '&&' . Expr1                         (rule 60)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 87

State 53

	RelOp -> '<' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 54

	RelOp -> '<=' .                                     (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 55

	RelOp -> '==' .                                     (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 56

	RelOp -> '>' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 57

	RelOp -> '>=' .                                     (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 58

	Expr3 -> Expr3 AddOp . Expr4                        (rule 56)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 86

State 59

	AddOp -> '+' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 60

	AddOp -> '-' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 61

	Expr4 -> Expr4 MulOp . Expr5                        (rule 54)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 85

State 62

	MulOp -> '%' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 63

	MulOp -> '*' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 64

	MulOp -> '/' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 65

	Stmt1 -> LeftSideAss '=' . Expr ';'                 (rule 34)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 84

State 66

	Stmt -> ListItem ':' . Type ';'                     (rule 8)

	'('            shift, and enter state 79
	'bool'         shift, and enter state 80
	'int'          shift, and enter state 81
	'string'       shift, and enter state 82
	'void'         shift, and enter state 83

	Type           goto state 78

State 67

	ListItem -> Item ',' . ListItem                     (rule 33)

	L_Ident        shift, and enter state 2

	Ident          goto state 76
	Item           goto state 10
	ListItem       goto state 77

State 68

	ListStmt -> Stmt ListStmt .                         (rule 30)

	'}'            reduce using rule 30
	%eof           reduce using rule 30


State 69

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 48)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	')'            reduce using rule 65
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 74
	ListExpr       goto state 75

State 70

	Stmt -> Ident '++' . ';'                            (rule 11)

	';'            shift, and enter state 73


State 71

	Stmt -> Ident '--' . ';'                            (rule 12)

	';'            shift, and enter state 72


State 72

	Stmt -> Ident '--' ';' .                            (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'false'        reduce using rule 12
	'func'         reduce using rule 12
	'if'           reduce using rule 12
	'lambda:'      reduce using rule 12
	'print'        reduce using rule 12
	'return'       reduce using rule 12
	'true'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 73

	Stmt -> Ident '++' ';' .                            (rule 11)

	'!'            reduce using rule 11
	'('            reduce using rule 11
	'-'            reduce using rule 11
	';'            reduce using rule 11
	'false'        reduce using rule 11
	'func'         reduce using rule 11
	'if'           reduce using rule 11
	'lambda:'      reduce using rule 11
	'print'        reduce using rule 11
	'return'       reduce using rule 11
	'true'         reduce using rule 11
	'while'        reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	L_Ident        reduce using rule 11
	L_integ        reduce using rule 11
	L_quoted       reduce using rule 11
	%eof           reduce using rule 11


State 74

	ListExpr -> Expr .                                  (rule 66)
	ListExpr -> Expr . ',' ListExpr                     (rule 67)

	')'            reduce using rule 66
	','            shift, and enter state 112


State 75

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 48)

	')'            shift, and enter state 111


State 76

	Item -> Ident .                                     (rule 31)

	','            reduce using rule 31
	':'            reduce using rule 31


State 77

	ListItem -> Item ',' ListItem .                     (rule 33)

	':'            reduce using rule 33


State 78

	Stmt -> ListItem ':' Type . ';'                     (rule 8)

	';'            shift, and enter state 110


State 79

	Type -> '(' . ListType ')' '->' Type                (rule 40)

	'('            shift, and enter state 79
	')'            reduce using rule 41
	'bool'         shift, and enter state 80
	'int'          shift, and enter state 81
	'string'       shift, and enter state 82
	'void'         shift, and enter state 83

	Type           goto state 108
	ListType       goto state 109

State 80

	Type -> 'bool' .                                    (rule 38)

	')'            reduce using rule 38
	','            reduce using rule 38
	';'            reduce using rule 38
	'{'            reduce using rule 38


State 81

	Type -> 'int' .                                     (rule 36)

	')'            reduce using rule 36
	','            reduce using rule 36
	';'            reduce using rule 36
	'{'            reduce using rule 36


State 82

	Type -> 'string' .                                  (rule 37)

	')'            reduce using rule 37
	','            reduce using rule 37
	';'            reduce using rule 37
	'{'            reduce using rule 37


State 83

	Type -> 'void' .                                    (rule 39)

	')'            reduce using rule 39
	','            reduce using rule 39
	';'            reduce using rule 39
	'{'            reduce using rule 39


State 84

	Stmt1 -> LeftSideAss '=' Expr . ';'                 (rule 34)

	';'            shift, and enter state 107


State 85

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54


State 86

	Expr4 -> Expr4 . MulOp Expr5                        (rule 54)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 56)

	'!='           reduce using rule 56
	'%'            shift, and enter state 62
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            shift, and enter state 63
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            shift, and enter state 64
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56

	MulOp          goto state 61

State 87

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	'||'           reduce using rule 60


State 88

	Expr3 -> Expr3 . AddOp Expr4                        (rule 56)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 58)

	'!='           reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'+'            shift, and enter state 59
	','            reduce using rule 58
	'-'            shift, and enter state 60
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58

	AddOp          goto state 58

State 89

	Expr -> Expr1 '||' Expr .                           (rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	';'            reduce using rule 62


State 90

	Expr6 -> '(' Expr ')' .                             (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 91

	Stmt -> 'func' Ident ':' . '(' ListArg ')' '->' Type Block    (rule 5)

	'('            shift, and enter state 106


State 92

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 15)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 16)

	')'            shift, and enter state 105


State 93

	Arg -> Ident . ':' Type                             (rule 19)
	Arg -> Ident . ':' '@' Type                         (rule 20)

	':'            shift, and enter state 104


State 94

	ListArg -> Arg .                                    (rule 22)
	ListArg -> Arg . ',' ListArg                        (rule 23)

	')'            reduce using rule 22
	','            shift, and enter state 103


State 95

	Expr -> 'lambda:' '(' ListArg . ')' '->' Type Block    (rule 63)

	')'            shift, and enter state 102


State 96

	Stmt -> 'print' '(' ListExpr . ')' ';'              (rule 18)

	')'            shift, and enter state 101


State 97

	Stmt -> 'return' Expr ';' .                         (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'false'        reduce using rule 13
	'func'         reduce using rule 13
	'if'           reduce using rule 13
	'lambda:'      reduce using rule 13
	'print'        reduce using rule 13
	'return'       reduce using rule 13
	'true'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 98

	Stmt -> 'while' '(' Expr . ')' Block                (rule 17)

	')'            shift, and enter state 100


State 99

	Block -> '{' ListStmt '}' .                         (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'func'         reduce using rule 28
	'if'           reduce using rule 28
	'lambda:'      reduce using rule 28
	'print'        reduce using rule 28
	'return'       reduce using rule 28
	'true'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28
	%eof           reduce using rule 28


State 100

	Stmt -> 'while' '(' Expr ')' . Block                (rule 17)

	'{'            shift, and enter state 33

	Block          goto state 123

State 101

	Stmt -> 'print' '(' ListExpr ')' . ';'              (rule 18)

	';'            shift, and enter state 122


State 102

	Expr -> 'lambda:' '(' ListArg ')' . '->' Type Block    (rule 63)

	'->'           shift, and enter state 121


State 103

	ListArg -> Arg ',' . ListArg                        (rule 23)

	')'            reduce using rule 21
	L_Ident        shift, and enter state 2

	Ident          goto state 93
	Arg            goto state 94
	ListArg        goto state 120

State 104

	Arg -> Ident ':' . Type                             (rule 19)
	Arg -> Ident ':' . '@' Type                         (rule 20)

	'('            shift, and enter state 79
	'@'            shift, and enter state 119
	'bool'         shift, and enter state 80
	'int'          shift, and enter state 81
	'string'       shift, and enter state 82
	'void'         shift, and enter state 83

	Type           goto state 118

State 105

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 15)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 16)

	'{'            shift, and enter state 33

	Block          goto state 117

State 106

	Stmt -> 'func' Ident ':' '(' . ListArg ')' '->' Type Block    (rule 5)

	')'            reduce using rule 21
	L_Ident        shift, and enter state 2

	Ident          goto state 93
	Arg            goto state 94
	ListArg        goto state 116

State 107

	Stmt1 -> LeftSideAss '=' Expr ';' .                 (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'false'        reduce using rule 34
	'func'         reduce using rule 34
	'if'           reduce using rule 34
	'lambda:'      reduce using rule 34
	'print'        reduce using rule 34
	'return'       reduce using rule 34
	'true'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34
	%eof           reduce using rule 34


State 108

	ListType -> Type .                                  (rule 42)
	ListType -> Type . ',' ListType                     (rule 43)

	')'            reduce using rule 42
	','            shift, and enter state 115


State 109

	Type -> '(' ListType . ')' '->' Type                (rule 40)

	')'            shift, and enter state 114


State 110

	Stmt -> ListItem ':' Type ';' .                     (rule 8)

	'!'            reduce using rule 8
	'('            reduce using rule 8
	'-'            reduce using rule 8
	';'            reduce using rule 8
	'false'        reduce using rule 8
	'func'         reduce using rule 8
	'if'           reduce using rule 8
	'lambda:'      reduce using rule 8
	'print'        reduce using rule 8
	'return'       reduce using rule 8
	'true'         reduce using rule 8
	'while'        reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8
	L_integ        reduce using rule 8
	L_quoted       reduce using rule 8
	%eof           reduce using rule 8


State 111

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 112

	ListExpr -> Expr ',' . ListExpr                     (rule 67)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	')'            reduce using rule 65
	'-'            shift, and enter state 23
	'false'        shift, and enter state 25
	'lambda:'      shift, and enter state 28
	'true'         shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 34
	L_quoted       shift, and enter state 35

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 14
	Expr5          goto state 15
	Expr4          goto state 16
	Expr3          goto state 17
	Expr2          goto state 18
	Expr1          goto state 19
	Expr           goto state 74
	ListExpr       goto state 113

State 113

	ListExpr -> Expr ',' ListExpr .                     (rule 67)

	')'            reduce using rule 67


State 114

	Type -> '(' ListType ')' . '->' Type                (rule 40)

	'->'           shift, and enter state 129


State 115

	ListType -> Type ',' . ListType                     (rule 43)

	'('            shift, and enter state 79
	')'            reduce using rule 41
	'bool'         shift, and enter state 80
	'int'          shift, and enter state 81
	'string'       shift, and enter state 82
	'void'         shift, and enter state 83

	Type           goto state 108
	ListType       goto state 128

State 116

	Stmt -> 'func' Ident ':' '(' ListArg . ')' '->' Type Block    (rule 5)

	')'            shift, and enter state 127


State 117

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 15)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 16)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'else'         shift, and enter state 126
	'false'        reduce using rule 15
	'func'         reduce using rule 15
	'if'           reduce using rule 15
	'lambda:'      reduce using rule 15
	'print'        reduce using rule 15
	'return'       reduce using rule 15
	'true'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	%eof           reduce using rule 15


State 118

	Arg -> Ident ':' Type .                             (rule 19)

	')'            reduce using rule 19
	','            reduce using rule 19


State 119

	Arg -> Ident ':' '@' . Type                         (rule 20)

	'('            shift, and enter state 79
	'bool'         shift, and enter state 80
	'int'          shift, and enter state 81
	'string'       shift, and enter state 82
	'void'         shift, and enter state 83

	Type           goto state 125

State 120

	ListArg -> Arg ',' ListArg .                        (rule 23)

	')'            reduce using rule 23


State 121

	Expr -> 'lambda:' '(' ListArg ')' '->' . Type Block    (rule 63)

	'('            shift, and enter state 79
	'bool'         shift, and enter state 80
	'int'          shift, and enter state 81
	'string'       shift, and enter state 82
	'void'         shift, and enter state 83

	Type           goto state 124

State 122

	Stmt -> 'print' '(' ListExpr ')' ';' .              (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'false'        reduce using rule 18
	'func'         reduce using rule 18
	'if'           reduce using rule 18
	'lambda:'      reduce using rule 18
	'print'        reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


State 123

	Stmt -> 'while' '(' Expr ')' Block .                (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'false'        reduce using rule 17
	'func'         reduce using rule 17
	'if'           reduce using rule 17
	'lambda:'      reduce using rule 17
	'print'        reduce using rule 17
	'return'       reduce using rule 17
	'true'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17
	%eof           reduce using rule 17


State 124

	Expr -> 'lambda:' '(' ListArg ')' '->' Type . Block    (rule 63)

	'{'            shift, and enter state 33

	Block          goto state 133

State 125

	Arg -> Ident ':' '@' Type .                         (rule 20)

	')'            reduce using rule 20
	','            reduce using rule 20


State 126

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 16)

	'{'            shift, and enter state 33

	Block          goto state 132

State 127

	Stmt -> 'func' Ident ':' '(' ListArg ')' . '->' Type Block    (rule 5)

	'->'           shift, and enter state 131


State 128

	ListType -> Type ',' ListType .                     (rule 43)

	')'            reduce using rule 43


State 129

	Type -> '(' ListType ')' '->' . Type                (rule 40)

	'('            shift, and enter state 79
	'bool'         shift, and enter state 80
	'int'          shift, and enter state 81
	'string'       shift, and enter state 82
	'void'         shift, and enter state 83

	Type           goto state 130

State 130

	Type -> '(' ListType ')' '->' Type .                (rule 40)

	')'            reduce using rule 40
	','            reduce using rule 40
	';'            reduce using rule 40
	'{'            reduce using rule 40


State 131

	Stmt -> 'func' Ident ':' '(' ListArg ')' '->' . Type Block    (rule 5)

	'('            shift, and enter state 79
	'bool'         shift, and enter state 80
	'int'          shift, and enter state 81
	'string'       shift, and enter state 82
	'void'         shift, and enter state 83

	Type           goto state 134

State 132

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'false'        reduce using rule 16
	'func'         reduce using rule 16
	'if'           reduce using rule 16
	'lambda:'      reduce using rule 16
	'print'        reduce using rule 16
	'return'       reduce using rule 16
	'true'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	%eof           reduce using rule 16


State 133

	Expr -> 'lambda:' '(' ListArg ')' '->' Type Block .    (rule 63)

	')'            reduce using rule 63
	','            reduce using rule 63
	';'            reduce using rule 63


State 134

	Stmt -> 'func' Ident ':' '(' ListArg ')' '->' Type . Block    (rule 5)

	'{'            shift, and enter state 33

	Block          goto state 135

State 135

	Stmt -> 'func' Ident ':' '(' ListArg ')' '->' Type Block .    (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'false'        reduce using rule 5
	'func'         reduce using rule 5
	'if'           reduce using rule 5
	'lambda:'      reduce using rule 5
	'print'        reduce using rule 5
	'return'       reduce using rule 5
	'true'         reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 79
Number of terminals: 42
Number of non-terminals: 29
Number of states: 136
