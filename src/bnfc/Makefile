## File generated by the BNF Converter (bnfc 2.9.4).

# Makefile for building the parser and test program.

GHC        = ghc
HAPPY      = happy
HAPPY_OPTS = --array --info --ghc --coerce
ALEX       = alex
ALEX_OPTS  = --ghc

# List of goals not corresponding to file names.

.PHONY : all clean distclean

# Default goal.

all : TestFrappe

# Rules for building the parser.

AbsFrappe.hs LexFrappe.x ParFrappe.y PrintFrappe.hs TestFrappe.hs : Frappe.cf
	bnfc --haskell --functor Frappe.cf

%.hs : %.y
	${HAPPY} ${HAPPY_OPTS} $<

%.hs : %.x
	${ALEX} ${ALEX_OPTS} $<

TestFrappe : AbsFrappe.hs LexFrappe.hs ParFrappe.hs PrintFrappe.hs TestFrappe.hs
	${GHC} ${GHC_OPTS} $@

# Rules for cleaning generated files.

clean :
	-rm -f *.hi *.o *.log *.aux *.dvi

distclean : clean
	-rm -f AbsFrappe.hs AbsFrappe.hs.bak ComposOp.hs ComposOp.hs.bak DocFrappe.txt DocFrappe.txt.bak ErrM.hs ErrM.hs.bak LayoutFrappe.hs LayoutFrappe.hs.bak LexFrappe.x LexFrappe.x.bak ParFrappe.y ParFrappe.y.bak PrintFrappe.hs PrintFrappe.hs.bak SkelFrappe.hs SkelFrappe.hs.bak TestFrappe.hs TestFrappe.hs.bak XMLFrappe.hs XMLFrappe.hs.bak ASTFrappe.agda ASTFrappe.agda.bak ParserFrappe.agda ParserFrappe.agda.bak IOLib.agda IOLib.agda.bak Main.agda Main.agda.bak Frappe.dtd Frappe.dtd.bak TestFrappe LexFrappe.hs ParFrappe.hs ParFrappe.info ParDataFrappe.hs Makefile


# EOF
